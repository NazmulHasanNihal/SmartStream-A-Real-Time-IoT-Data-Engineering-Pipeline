services:

  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    restart: on-failure

  kafka-producer:
    build:
      context: .
      dockerfile: kafka-producer/Dockerfile
    container_name: kafka-producer
    depends_on:
      - kafka
    restart: on-failure

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: iot_user
      POSTGRES_PASSWORD: iot_pass
      POSTGRES_DB: iot
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  db-consumer:
    build:
      context: ./db-consumer
      dockerfile: Dockerfile
    container_name: db-consumer
    depends_on:
      - kafka
      - postgres

  api-server:
    build:
      context: ./api-server
      dockerfile: Dockerfile
    container_name: api-server
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - postgres

  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: dashboard
    ports:
      - "8501:8501"
    depends_on:
      - postgres

volumes:
  pgdata:
